name: CI build & push to GHCR

on:
  # push:
  #   branches:
  #     - 'release/**'
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    # outputs:
    #   digest: ${{ steps.build.outputs.digest }}
    #   version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase IMAGE_NAME
        run: echo "IMAGE_NAME=${IMAGE_NAME,,}" >> $GITHUB_ENV
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}

      # - name: Derive version from branch (release/x.y.z)
      #   id: meta
      #   run: |
      #     VERSION="${GITHUB_REF_NAME#release/}"
      #     if [ -z "$VERSION" ] || ! echo "$VERSION" | grep -Eq '^[0-9]+\.[0-9]+\.[0-9]+$'; then
      #       echo "Branch name must be release/x.y.z"; exit 1
      #     fi
      #     echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push app image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      # - name: Save digest artifact with version
      #   run: echo "${{ steps.build.outputs.digest }}" > image_digest_${{ steps.meta.outputs.version }}.txt

      # - name: Upload digest artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: digest
      #     path: image_digest_${{ steps.meta.outputs.version }}.txt

